class Solution{

	public:
	int perfectSum(int arr[], int n, int sum)
	{
	    const int k =1e9+7;
        int dp[n+1][sum+1];
        for(int i=0;i<n+1;i++)
        {
            for(int j=0;j<sum+1;j++)
            {
                if(i==0)
                {
                    dp[i][j]=0;
                }
                // if(j==0)
                // {
                //     dp[i][j]=1;
                // }
            }
        }
        dp[0][0]=1;
        for(int i=1;i<n+1;i++)
        {
            for(int j=0;j<sum+1;j++)
            {
                if(arr[i-1]<=j)
                {
                    dp[i][j]=(dp[i-1][j]+dp[i-1][j-arr[i-1]])%k;
                }
                else{
                    dp[i][j]=dp[i-1][j]%k;
                }
            }
        }
      return dp[n][sum];
    
    //  const int k=1e9+7;
    //   int dp[n+1][sum+1];
    //   for(int j=0;j<sum+1;j++){
    //       dp[0][j]=0;
    //   }
    //   dp[0][0]=1;
    //   for(int i=1;i<n+1;i++){
    //       for(int j=0;j<sum+1;j++){
    //           //constriants mai 0 bhi include kiya hai sum ke so j ko 0 se initialize kiya
    //           if(arr[i-1]<=j){
    //               dp[i][j]=(dp[i-1][j-arr[i-1]]+dp[i-1][j])%k;
    //           }
    //           else{
    //               dp[i][j]=dp[i-1][j]%k;
    //           }
    //       }
    //   }
    //   return dp[n][sum];
        
	}
	  
};
