/*Complete the function below
Node is as follows:
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

class Solution{
  public:
    // Return True if the given trees are isomotphic. Else return False.
   void inorder(Node *root,vector<int>&v){
        if(root==NULL){
            return;
        }
        inorder(root->left,v);
        v.push_back(root->data);
        inorder(root->right,v);    
    }
    
    

    bool isIsomorphic(Node *root1,Node *root2)
    {
    //add code here.
    
    if(root1==NULL && root2==NULL){
        return true;
    }
    
    
    vector<int>v1;
    vector<int>v2;
    
    inorder(root1,v1);
    inorder(root2,v2);
    
    if(v1==v2){
        return true;
    }
    int i=0;
    int j=v2.size()-1;
    
    
    while(i<v2.size() && j>=0){
        
        if(v1[i]!=v2[j]){
            return false;
        }
        
        
        i++;
        j--;
    }

    
    return true;
    
    }
};
